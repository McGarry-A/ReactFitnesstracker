{"version":3,"sources":["Charts/DonughtStyles.js","Charts/Donught.js","Charts/LineChartStyles.js","Charts/LineChart.js","Components/GlobalStyles.js","Components/NewDataset.js","Components/SetNewGoalsStyles.js","Components/SetNewGoals.js","InitialData.js","Components/NewRecordStyles.js","Components/NewRecord.js","Components/FirstRowStyles.js","Components/SecondRowStyles.js","App.js","index.js"],"names":["DonughtContainer","styled","div","Donught","goal","currentMax","lift","data","labels","datasets","backgroundColor","LineChartContainer","LineChart","benchDataset","squatDataset","deadliftDataset","label","ohpDataset","borderColor","borderWidth","options","plugins","title","display","text","scales","x","type","time","unit","MaxContainer","NewDataset","index","state","setState","useState","input","setInput","setNewGoal","exercise","newGoal","newState","goals","console","log","onChange","e","target","value","handleChange","onClick","SetNewGoals","SetNewGoal","initialData","previousLifts","squat","y","deadlift","bench","overheadpress","currentMaxes","NewRecordWrapper","NewRecord","Date","startDate","setStartDate","dateSelected","setDateSelected","setLift","amount","setAmount","selected","date","toISOString","split","handleDateChange","format","list","id","name","toLowerCase","handleLift","handleAmount","newLift","join","FirstRow","SecondRow","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d306c67d.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const DonughtContainer = styled.div`\nheight: 300px;\nwidth: 300px;\ntext-align: center;\n`","import { Doughnut } from \"react-chartjs-2\";\nimport { DonughtContainer } from \"./DonughtStyles\";\n\nexport const Donught = ({ goal, currentMax, lift }) => {\n  const remainder = goal - currentMax;\n\n  const data = {\n    labels: [\"Left to achieve goal\", \"Current lifts\"],\n    datasets: [\n      {\n        data: [remainder, currentMax],\n        backgroundColor: [\"rgba(255, 99, 132, 0.2)\", \"rgba(255, 159, 64, 0.2)\"],\n      },\n    ],\n  };\n\n  return (\n    <DonughtContainer>\n      <h3>{lift}</h3>\n      <Doughnut data={data} />\n    </DonughtContainer>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const LineChartContainer = styled.div`\nheight: 500px;\nwidth: 50vw;\nmin-width: 500px;\n`","import { Line } from \"react-chartjs-2\";\nimport \"chartjs-adapter-date-fns\";\nimport { LineChartContainer } from \"./LineChartStyles\";\n\nexport const LineChart = ({\n  benchDataset,\n  squatDataset,\n  deadliftDataset,\n  ohpDataset,\n}) => {\n  const data = {\n    datasets: [\n      {\n        label: \"Overhead Press\",\n        data: ohpDataset,\n        backgroundColor: \"rgba(255, 99, 132, 0.2)\",\n        borderColor: \"rgb(255, 99, 132)\",\n        borderWidth: 3,\n      },\n      {\n        label: \"BenchPress\",\n        data: benchDataset,\n        backgroundColor: \"rgba(255, 159, 64, 0.2)\",\n        borderColor: \"rgba(255, 159, 64)\",\n        borderWidth: 3,\n      },\n      {\n        label: \"Squat\",\n        data: squatDataset,\n        backgroundColor: \"rgba(255, 205, 86, 0.2)\",\n        borderColor: \"rgba(255, 205, 86)\",\n        borderWidth: 3,\n      },\n      {\n        label: \"Deadlift\",\n        data: deadliftDataset,\n        backgroundColor: \"rgba(75, 192, 192, 0.2)\",\n        borderColor: \"rgba(75, 192, 192\",\n        borderWidth: 3,\n      },\n    ],\n    options: {\n      plugins: {\n        title: {\n          display: true,\n          text: \"1 REP Max Over Time\",\n        },\n      },\n      scales: {\n        x: {\n          type: \"time\",\n          time: {\n            unit: \"day\",\n          },\n        },\n      },\n    },\n  };\n\n  return (\n    <LineChartContainer>\n      <Line data={data} />\n    </LineChartContainer>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const AppWrapper = styled.div`\ndisplay: block;\nwidth: 1200px;\nmargin: 0 auto;\n`\n\nexport const MaxContainer = styled.div`\ndisplay: flex;`","import { useState } from \"react\";\n\nexport const NewDataset = ({ title, index, state, setState }) => {\n\n    const [input, setInput] = useState('')\n\n    const newGoal = () => {\n        switch (index) {\n            case \"1\":\n            setNewGoal(\"bench\", input)        \n                break;\n            case \"2\":\n            setNewGoal(\"squat\", input)\n                break;\n            case \"3\":\n            setNewGoal(\"deadlift\", input)\n                break;\n            case \"4\":\n            setNewGoal(\"overheadpress\", input)\n                break;\n            default:\n            console.log(\"Error in switch statement\")\n                break;\n        }\n    }\n\n    const setNewGoal = (exercise, newGoal) => { \n        \n        const newState = {\n            ...state\n        }\n\n        newState.goals[exercise] = newGoal\n        console.log(newState)\n        setState(newState)\n        setInput('')\n    }\n\n    const handleChange = e => {\n        setInput(e.target.value)\n        \n    }\n\n    const handleClick = () => { \n        newGoal(index)\n    }\n\n  return (\n    <div>\n      <label>{title}</label>\n      <input type=\"number\" onChange={(e)=>handleChange(e)}></input>\n      <button onClick={handleClick}>Update</button>\n    </div>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const SetNewGoals = styled.div`\ndisplay: flex;\nflex-direction:column;\nmargin: 5em 5em;\nwidth:25em;\nheight:20em;\nborder: 1px solid black;\njustify-content:center;\npadding: 1em;\n`","import { NewDataset } from \"./NewDataset\";\nimport {SetNewGoals } from \"./SetNewGoalsStyles\"\nexport const SetNewGoal = ({ state, setState }) => {\n  return (\n    <SetNewGoals>\n      <h2>Set New Goals</h2>\n      <NewDataset title=\"Bench: \" index=\"1\" state={state} setState={setState} />\n      <NewDataset title=\"Squat: \" index=\"2\" state={state} setState={setState} />\n      <NewDataset\n        title=\"Deadlift: \"\n        index=\"3\"\n        state={state}\n        setState={setState}\n      />\n      <NewDataset\n        title=\"Overhead Press: \"\n        index=\"4\"\n        state={state}\n        setState={setState}\n      />\n    </SetNewGoals>\n  );\n};\n","export const initialData = {\n  previousLifts: {\n    squat: [\n      { x: \"2021-06-25\", y: 61 },\n      { x: \"2021-06-27\", y: 85 },\n      { x: \"2021-06-28\", y: 95 },\n      { x: \"2021-07-01\", y: 100 },\n      { x: \"2021-07-02\", y: 115 },\n    ],\n    deadlift: [\n      { x: \"2021-06-25\", y: 80 },\n      { x: \"2021-06-27\", y: 95 },\n      { x: \"2021-06-28\", y: 110 },\n      { x: \"2021-07-01\", y: 120 },\n      { x: \"2021-07-02\", y: 130 },\n    ],\n    bench: [\n      { x: \"2021-06-25\", y: 55 },\n      { x: \"2021-06-27\", y: 65 },\n      { x: \"2021-06-28\", y: 70 },\n      { x: \"2021-07-01\", y: 78.5 },\n      { x: \"2021-07-02\", y: 82.5 },\n    ],\n    overheadpress: [\n      { x: \"2021-06-25\", y: 20 },\n      { x: \"2021-06-27\", y: 22 },\n      { x: \"2021-06-28\", y: 28 },\n      { x: \"2021-07-01\", y: 29 },\n      { x: \"2021-07-02\", y: 31 },\n    ],\n  },\n  currentMaxes: {\n    squat: 115,\n    deadlift: 130,\n    bench: 82.5,\n    overheadpress: 31,\n  },\n  goals: { \n      squat: 120, \n      deadlift: 140, \n      bench: 100, \n      overheadpress: 60\n    },\n};","import styled from \"styled-components\";\n\nexport const NewRecordWrapper = styled.div`\ndisplay: flex;\nflex-direction:column;\nmargin: 5em 5em;\nwidth:20em;\nborder: 1px solid black;\njustify-content:center;\npadding: 2em;\n`","import ReactDatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { useState } from \"react\";\nimport { NewRecordWrapper } from \"./NewRecordStyles\";\n\nexport const NewRecord = ({ state, setState }) => {\n  const [startDate, setStartDate] = useState(new Date());\n  const [dateSelected, setDateSelected] = useState(\"\");\n  const [lift, setLift] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n\n  const handleLift = (e) => setLift(e.target.value.toLowerCase());\n  const handleAmount = (e) => setAmount(e.target.value);\n  const handleDateChange = (date) => {\n      setStartDate(date)\n      setDateSelected(startDate.toISOString().split(\"T\")[0])\n  };\n  const handleSubmit = () => {\n    \n    if (lift === \"overhead press\") {\n      let newLift = lift.split(\" \").join(\"\")\n      setLift(newLift)\n      console.log(lift)\n    }\n\n    let newState = {\n      ...state,\n    };\n    \n    newState = {\n      ...newState,\n      previousLifts: {\n        ...newState.previousLifts,\n        [lift]: [\n          ...newState.previousLifts[lift],\n          { x: dateSelected, y: amount },\n        ],\n      },\n    };\n    console.log(newState);\n    setState(newState);\n  };\n\n  return (\n    <NewRecordWrapper>\n      <ReactDatePicker\n        selected={startDate}\n        onChange={(date) => handleDateChange(date)}\n        format=\"dd-mm-yyyy\"\n      />\n      <label>Exercise Name</label>\n      <input\n        list=\"lifts\"\n        id=\"newLifts\"\n        name=\"newLifts\"\n        onChange={(e) => handleLift(e)}\n      />\n      <datalist id=\"lifts\">\n        <option value=\"Bench\" />\n        <option value=\"Squat\" />\n        <option value=\"Deadlift\" />\n        <option value=\"Overheadpress\" />\n      </datalist>\n      <label>Weight Lifted</label>\n      <input type=\"number\"onChange={(e) => handleAmount(e)}></input>\n      <button onClick={handleSubmit}>Submit Entry</button>\n    </NewRecordWrapper>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const FirstRow = styled.div`\ndisplay: flex;\nmargin: 10em 15em;`","import styled from \"styled-components\";\n\nexport const SecondRow = styled.div`\ndisplay: flex;\nmargin: 10em 15em;`","import { useState } from \"react\";\nimport { Donught } from \"./Charts/Donught\";\nimport { LineChart } from \"./Charts/LineChart\";\nimport { MaxContainer } from \"./Components/GlobalStyles\";\nimport { SetNewGoal } from \"./Components/SetNewGoals\";\nimport { initialData } from \"./InitialData\";\nimport { NewRecord } from \"./Components/NewRecord\";\nimport { FirstRow } from \"./Components/FirstRowStyles\"\nimport { SecondRow } from \"./Components/SecondRowStyles\"\nfunction App() {\n  const [state, setState] = useState(initialData);\n\n  return (\n    <>\n    <h1>1 REP MAX TRACKER</h1>\n      <FirstRow>\n        <LineChart\n          benchDataset={state.previousLifts.bench}\n          squatDataset={state.previousLifts.squat}\n          deadliftDataset={state.previousLifts.deadlift}\n          ohpDataset={state.previousLifts.overheadpress}\n        />\n        <NewRecord state={state} setState={setState} />\n      </FirstRow>\n      <SecondRow>\n      <MaxContainer>\n        <Donught\n          goal={state.goals.bench}\n          currentMax={state.currentMaxes.bench}\n          lift=\"BenchPress\"\n        />\n        <Donught\n          goal={state.goals.squat}\n          currentMax={state.currentMaxes.squat}\n          lift=\"Squat\"\n        />\n        <Donught\n          goal={state.goals.deadlift}\n          currentMax={state.currentMaxes.deadlift}\n          lift=\"Deadlift\"\n        />\n        <Donught\n          goal={state.goals.overheadpress}\n          currentMax={state.currentMaxes.overheadpress}\n          lift=\"Overhead Press\"\n        />\n      </MaxContainer>\n        <SetNewGoal\n          title=\"Update Goals\"\n          goals={state.goals}\n          state={state}\n          setState={setState}\n        />\n        </SecondRow>\n      \n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n"],"sourceRoot":""}